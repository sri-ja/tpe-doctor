{"ast":null,"code":"var _jsxFileName = \"/home/shambhavi/Documents/4-2/tpe/app/tpe-doctor/doctor/frontend/src/ReviewSession/components/SessionReview/components/ExerciseMetrics.tsx\";\nimport React from \"react\";\n\n// 1. Define Props for MetricBox\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// 2. Type MetricBox component\nconst MetricBox = ({\n  label,\n  value\n}) =>\n/*#__PURE__*/\n// Standardized styling\n_jsxDEV(\"div\", {\n  className: \"bg-gray-50 p-4 rounded-lg border border-gray-200 h-full\",\n  children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-sm font-medium text-gray-500 mb-1\",\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-base font-semibold text-gray-800\",\n    children: value || 'N/A'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n\n// 3. Define interface for metrics data\n_c = MetricBox;\n// 4. Type mockMetrics object\n// TODO: Fetch actual metrics data\nconst mockMetrics = {\n  exerciseType: \"Climbing Temple Stairs\",\n  duration: \"45 minutes\",\n  performanceScore: 95,\n  performanceText: \"Excellent\" // Example text based on score\n};\n\n// 5. Type ExerciseMetrics component\nconst ExerciseMetrics = () => {\n  const {\n    exerciseType,\n    duration,\n    performanceScore,\n    performanceText\n  } = mockMetrics;\n  return (\n    /*#__PURE__*/\n    // Removed margin-top, added responsive grid\n    _jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(MetricBox, {\n        label: \"Exercise Type\",\n        value: exerciseType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MetricBox, {\n        label: \"Duration\",\n        value: duration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-50 p-4 rounded-lg border border-gray-200 h-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm font-medium text-gray-500 mb-1\",\n          children: \"Performance Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"px-2.5 py-0.5 text-xs font-semibold rounded-full bg-blue-100 text-blue-700\",\n            children: [performanceScore, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: performanceText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n  );\n};\n_c2 = ExerciseMetrics;\nexport default ExerciseMetrics;\nvar _c, _c2;\n$RefreshReg$(_c, \"MetricBox\");\n$RefreshReg$(_c2, \"ExerciseMetrics\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MetricBox","label","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","mockMetrics","exerciseType","duration","performanceScore","performanceText","ExerciseMetrics","_c2","$RefreshReg$"],"sources":["/home/shambhavi/Documents/4-2/tpe/app/tpe-doctor/doctor/frontend/src/ReviewSession/components/SessionReview/components/ExerciseMetrics.tsx"],"sourcesContent":["import React from \"react\";\n\n// 1. Define Props for MetricBox\ninterface MetricBoxProps {\n  label: string;\n  value: string | number | undefined | null; // Allow different types for value\n}\n\n// 2. Type MetricBox component\nconst MetricBox: React.FC<MetricBoxProps> = ({ label, value }) => (\n  // Standardized styling\n  <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200 h-full\"> {/* Added h-full for consistent height in grid */}\n    {/* Standardized text */}\n    <div className=\"text-sm font-medium text-gray-500 mb-1\">{label}</div>\n    <div className=\"text-base font-semibold text-gray-800\">{value || 'N/A'}</div>\n  </div>\n);\n\n// 3. Define interface for metrics data\ninterface MetricsData {\n  exerciseType: string;\n  duration: string;\n  performanceScore: number;\n  performanceText: string;\n}\n\n// 4. Type mockMetrics object\n// TODO: Fetch actual metrics data\nconst mockMetrics: MetricsData = {\n  exerciseType: \"Climbing Temple Stairs\",\n  duration: \"45 minutes\",\n  performanceScore: 95,\n  performanceText: \"Excellent\" // Example text based on score\n};\n\n// 5. Type ExerciseMetrics component\nconst ExerciseMetrics: React.FC = () => {\n  const { exerciseType, duration, performanceScore, performanceText } = mockMetrics;\n\n  return (\n    // Removed margin-top, added responsive grid\n    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n      <MetricBox label=\"Exercise Type\" value={exerciseType} />\n      <MetricBox label=\"Duration\" value={duration} />\n\n      {/* Performance Score Box - Standardized */}\n      <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200 h-full\">\n        <div className=\"text-sm font-medium text-gray-500 mb-1\">Performance Score</div>\n        <div className=\"flex items-center gap-2\">\n          {/* Standardized badge */}\n          <span className=\"px-2.5 py-0.5 text-xs font-semibold rounded-full bg-blue-100 text-blue-700\">\n            {performanceScore}%\n          </span>\n          {/* Standardized text */}\n          <span className=\"text-sm text-gray-600\">{performanceText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExerciseMetrics;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA;AACA,MAAMC,SAAmC,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAM,CAAC;AAAA;AAC3D;AACAH,OAAA;EAAKI,SAAS,EAAC,yDAAyD;EAAAC,QAAA,GAAC,GAAC,eAExEL,OAAA;IAAKI,SAAS,EAAC,wCAAwC;IAAAC,QAAA,EAAEH;EAAK;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC,eACrET,OAAA;IAAKI,SAAS,EAAC,uCAAuC;IAAAC,QAAA,EAAEF,KAAK,IAAI;EAAK;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAC1E,CACN;;AAED;AAAAC,EAAA,GATMT,SAAmC;AAiBzC;AACA;AACA,MAAMU,WAAwB,GAAG;EAC/BC,YAAY,EAAE,wBAAwB;EACtCC,QAAQ,EAAE,YAAY;EACtBC,gBAAgB,EAAE,EAAE;EACpBC,eAAe,EAAE,WAAW,CAAC;AAC/B,CAAC;;AAED;AACA,MAAMC,eAAyB,GAAGA,CAAA,KAAM;EACtC,MAAM;IAAEJ,YAAY;IAAEC,QAAQ;IAAEC,gBAAgB;IAAEC;EAAgB,CAAC,GAAGJ,WAAW;EAEjF;IAAA;IACE;IACAX,OAAA;MAAKI,SAAS,EAAC,uCAAuC;MAAAC,QAAA,gBACpDL,OAAA,CAACC,SAAS;QAACC,KAAK,EAAC,eAAe;QAACC,KAAK,EAAES;MAAa;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxDT,OAAA,CAACC,SAAS;QAACC,KAAK,EAAC,UAAU;QAACC,KAAK,EAAEU;MAAS;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAG/CT,OAAA;QAAKI,SAAS,EAAC,yDAAyD;QAAAC,QAAA,gBACtEL,OAAA;UAAKI,SAAS,EAAC,wCAAwC;UAAAC,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC/ET,OAAA;UAAKI,SAAS,EAAC,yBAAyB;UAAAC,QAAA,gBAEtCL,OAAA;YAAMI,SAAS,EAAC,4EAA4E;YAAAC,QAAA,GACzFS,gBAAgB,EAAC,GACpB;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAEPT,OAAA;YAAMI,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAEU;UAAe;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;AAEV,CAAC;AAACQ,GAAA,GAvBID,eAAyB;AAyB/B,eAAeA,eAAe;AAAC,IAAAN,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}