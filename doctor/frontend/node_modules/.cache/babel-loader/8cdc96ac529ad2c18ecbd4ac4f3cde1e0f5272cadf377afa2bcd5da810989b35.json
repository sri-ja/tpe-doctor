{"ast":null,"code":"var _jsxFileName = \"/home/shambhavi/Documents/4-2/tpe/app/tpe-doctor/src/components/TableHeader.tsx\";\nimport React from \"react\";\n\n// Interface for column configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Define column configurations (simplified, spans are implicit now)\nconst pendingColumns = [{\n  label: \"Patient Name\"\n}, {\n  label: \"Session Date\"\n}, {\n  label: \"Exercise\"\n}, {\n  label: \"Duration\"\n}, {\n  label: \"Performance\",\n  align: 'center'\n}, {\n  label: \"Actions\",\n  align: 'center'\n}];\nconst ongoingColumns = [{\n  label: \"Patient Name\"\n}, {\n  label: \"Last Session\"\n}, {\n  label: \"Exercise\"\n}, {\n  label: \"Progress\",\n  align: 'center'\n}, {\n  label: \"Actions\",\n  align: 'center'\n}];\nexport const TableHeader = ({\n  tab\n}) => {\n  const columns = tab === \"pending\" ? pendingColumns : ongoingColumns;\n\n  // Define alignment utility function\n  const getAlignmentClass = align => {\n    switch (align) {\n      case 'center':\n        return 'text-center';\n      case 'right':\n        return 'text-right';\n      default:\n        return 'text-left';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"thead\", {\n    className: \"bg-gray-100 sticky top-0 z-10\",\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n        scope: \"col\",\n        className: `px-6 py-3 ${getAlignmentClass(col.align)} text-xs font-semibold text-text-secondary uppercase tracking-wider`,\n        children: col.label\n      }, col.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c = TableHeader;\nvar _c;\n$RefreshReg$(_c, \"TableHeader\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","pendingColumns","label","align","ongoingColumns","TableHeader","tab","columns","getAlignmentClass","className","children","map","col","scope","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/shambhavi/Documents/4-2/tpe/app/tpe-doctor/src/components/TableHeader.tsx"],"sourcesContent":["import React from \"react\";\n\n// Interface for column configuration\ninterface ColumnConfig {\n  label: string;\n  align?: 'left' | 'center' | 'right';\n}\n\n// Define column configurations (simplified, spans are implicit now)\nconst pendingColumns: ColumnConfig[] = [\n  { label: \"Patient Name\" },\n  { label: \"Session Date\" },\n  { label: \"Exercise\" },\n  { label: \"Duration\" },\n  { label: \"Performance\", align: 'center' },\n  { label: \"Actions\", align: 'center' },\n];\n\nconst ongoingColumns: ColumnConfig[] = [\n  { label: \"Patient Name\" },\n  { label: \"Last Session\" },\n  { label: \"Exercise\" },\n  { label: \"Progress\", align: 'center' },\n  { label: \"Actions\", align: 'center' },\n];\n\ninterface Props {\n  tab: \"pending\" | \"ongoing\";\n}\n\nexport const TableHeader: React.FC<Props> = ({ tab }) => {\n  const columns: ColumnConfig[] = tab === \"pending\" ? pendingColumns : ongoingColumns;\n\n  // Define alignment utility function\n  const getAlignmentClass = (align?: 'left' | 'center' | 'right'): string => {\n    switch (align) {\n      case 'center': return 'text-center';\n      case 'right': return 'text-right';\n      default: return 'text-left';\n    }\n  };\n\n  return (\n    <thead className=\"bg-gray-100 sticky top-0 z-10\">\n      <tr>\n        {columns.map((col) => (\n          <th\n            key={col.label}\n            scope=\"col\"\n            className={`px-6 py-3 ${getAlignmentClass(col.align)} text-xs font-semibold text-text-secondary uppercase tracking-wider`}\n          >\n            {col.label}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA;AACA,MAAMC,cAA8B,GAAG,CACrC;EAAEC,KAAK,EAAE;AAAe,CAAC,EACzB;EAAEA,KAAK,EAAE;AAAe,CAAC,EACzB;EAAEA,KAAK,EAAE;AAAW,CAAC,EACrB;EAAEA,KAAK,EAAE;AAAW,CAAC,EACrB;EAAEA,KAAK,EAAE,aAAa;EAAEC,KAAK,EAAE;AAAS,CAAC,EACzC;EAAED,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAS,CAAC,CACtC;AAED,MAAMC,cAA8B,GAAG,CACrC;EAAEF,KAAK,EAAE;AAAe,CAAC,EACzB;EAAEA,KAAK,EAAE;AAAe,CAAC,EACzB;EAAEA,KAAK,EAAE;AAAW,CAAC,EACrB;EAAEA,KAAK,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAS,CAAC,EACtC;EAAED,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAS,CAAC,CACtC;AAMD,OAAO,MAAME,WAA4B,GAAGA,CAAC;EAAEC;AAAI,CAAC,KAAK;EACvD,MAAMC,OAAuB,GAAGD,GAAG,KAAK,SAAS,GAAGL,cAAc,GAAGG,cAAc;;EAEnF;EACA,MAAMI,iBAAiB,GAAIL,KAAmC,IAAa;IACzE,QAAQA,KAAK;MACX,KAAK,QAAQ;QAAE,OAAO,aAAa;MACnC,KAAK,OAAO;QAAE,OAAO,YAAY;MACjC;QAAS,OAAO,WAAW;IAC7B;EACF,CAAC;EAED,oBACEH,OAAA;IAAOS,SAAS,EAAC,+BAA+B;IAAAC,QAAA,eAC9CV,OAAA;MAAAU,QAAA,EACGH,OAAO,CAACI,GAAG,CAAEC,GAAG,iBACfZ,OAAA;QAEEa,KAAK,EAAC,KAAK;QACXJ,SAAS,EAAE,aAAaD,iBAAiB,CAACI,GAAG,CAACT,KAAK,CAAC,qEAAsE;QAAAO,QAAA,EAEzHE,GAAG,CAACV;MAAK,GAJLU,GAAG,CAACV,KAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEZ,CAAC;AAACC,EAAA,GA3BWb,WAA4B;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}